You are using the default legacy behaviour of the <class 'transformers.models.llama.tokenization_llama_fast.LlamaTokenizerFast'>. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565 - if you loaded a llama tokenizer from a GGUF file you can ignore this message. 
Traceback (most recent call last):
  File "C:\Users\Acer\AppData\Roaming\Python\Python313\site-packages\transformers\models\auto\configuration_auto.py", line 1113, in from_pretrained
    config_class = CONFIG_MAPPING[config_dict["model_type"]]
                   ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Acer\AppData\Roaming\Python\Python313\site-packages\transformers\models\auto\configuration_auto.py", line 815, in __getitem__
    raise KeyError(key)
KeyError: 'multi_modality'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Acer\Downloads\roseeai\rosee-ai\rosee.py", line 13, in <module>
    model = AutoModelForCausalLM.from_pretrained(
        model_path,
    ...<2 lines>...
        # Remove device_map if no GPU
    )
  File "C:\Users\Acer\AppData\Roaming\Python\Python313\site-packages\transformers\models\auto\auto_factory.py", 
line 531, in from_pretrained
    config, kwargs = AutoConfig.from_pretrained(
                     ~~~~~~~~~~~~~~~~~~~~~~~~~~^
        pretrained_model_name_or_path,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "C:\Users\Acer\AppData\Roaming\Python\Python313\site-packages\transformers\models\auto\configuration_auto.py", line 1115, in from_pretrained
    raise ValueError(
    ...<8 lines>...
    )
ValueError: The checkpoint you are trying to load has model type `multi_modality` but Transformers does not recognize this architecture. This could be because of an issue with the checkpoint, or because your version of Transformers is out of date.

You can update Transformers with the command `pip install --upgrade transformers`. If this does not work, and the checkpoint is very new, then there may not be a release version that supports this model yet. In this case, you can get the most up-to-date code by installing Transformers from source with the command `pip install git+https://github.com/huggingface/transformers.git`
